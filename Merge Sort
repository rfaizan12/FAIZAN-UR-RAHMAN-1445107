@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<classpath>
+	<classpathentry kind="src" path="src"/>
+	<classpathentry kind="con" path="org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.8"/>
+	<classpathentry kind="output" path="bin"/>
+</classpath>
17  Mergesort/.project
@@ -0,0 +1,17 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<projectDescription>
+	<name>Binary search</name>
+	<comment></comment>
+	<projects>
+	</projects>
+	<buildSpec>
+		<buildCommand>
+			<name>org.eclipse.jdt.core.javabuilder</name>
+			<arguments>
+			</arguments>
+		</buildCommand>
+	</buildSpec>
+	<natures>
+		<nature>org.eclipse.jdt.core.javanature</nature>
+	</natures>
+</projectDescription>
11  Mergesort/.settings/org.eclipse.jdt.core.prefs
@@ -0,0 +1,11 @@
+eclipse.preferences.version=1
+org.eclipse.jdt.core.compiler.codegen.inlineJsrBytecode=enabled
+org.eclipse.jdt.core.compiler.codegen.targetPlatform=1.8
+org.eclipse.jdt.core.compiler.codegen.unusedLocal=preserve
+org.eclipse.jdt.core.compiler.compliance=1.8
+org.eclipse.jdt.core.compiler.debug.lineNumber=generate
+org.eclipse.jdt.core.compiler.debug.localVariable=generate
+org.eclipse.jdt.core.compiler.debug.sourceFile=generate
+org.eclipse.jdt.core.compiler.problem.assertIdentifier=error
+org.eclipse.jdt.core.compiler.problem.enumIdentifier=error
+org.eclipse.jdt.core.compiler.source=1.8
BIN  Mergesort/bin/Main.class
Binary file not shown
59  Mergesort/src/Main.java
@@ -0,0 +1,59 @@
+
+public class Main {
+
+    public static void main(String args[])
+    {
+        int []a = {2,15,22,47,51};
+        int []b = {14,18,26,45,49,56,78};
+        // Array C of sum of size of the two sorted array A and B
+        int []c = new int[a.length+b.length];  
+        merge(a,b,c);
+        System.out.print("Array a: ");
+        printArray(a);
+        System.out.println();
+        System.out.print("Array b: ");
+        printArray(b);
+        System.out.println();
+        System.out.print("Array c: ");
+        printArray(c);
+    }
+		
+	public static void merge(int []a, int []b, int []c)
+	{
+        int cursorA = 0,cursorB = 0,cursorC = 0;
+        int sizeA = a.length;
+		int sizeB = b.length;
+        while(cursorA < sizeA && cursorB < sizeB)
+		{
+            if(a[cursorA] < b[cursorB])
+			{
+                c[cursorC++] = a[cursorA++];
+            }
+			else
+			{
+
+                c[cursorC++] = b[cursorB++];
+            }
+
+        }
+        while(cursorA < sizeA)
+		{
+            c[cursorC++] = a[cursorA++];
+        }
+        while(cursorB < sizeB)
+		{
+
+            c[cursorC++] = b[cursorB++];
+        }
+
+    }
+	public static void printArray(int []array){
+
+        for(int i : array){
+
+            System.out.print(i+" ");
+        }
+    }
+
+
+} 
